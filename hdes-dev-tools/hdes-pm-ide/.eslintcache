[{"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/index.tsx":"1","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/reportWebVitals.ts":"2","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/App.tsx":"3","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/index.tsx":"4","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/Projects.tsx":"5","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/Title.tsx":"6","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/index.tsx":"7","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/MenuItems.tsx":"8","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Shell/index.tsx":"9","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Shell/Shells.tsx":"10","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/AddUser.tsx":"11","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/AddUserToProject.tsx":"12"},{"size":1757,"mtime":1607949734266,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607858054183,"results":"15","hashOfConfig":"14"},{"size":1196,"mtime":1608020591551,"results":"16","hashOfConfig":"14"},{"size":38,"mtime":1607864217818,"results":"17","hashOfConfig":"14"},{"size":2728,"mtime":1608020771769,"results":"18","hashOfConfig":"14"},{"size":286,"mtime":1607864069566,"results":"19","hashOfConfig":"14"},{"size":67,"mtime":1607865709090,"results":"20","hashOfConfig":"14"},{"size":2177,"mtime":1607948585684,"results":"21","hashOfConfig":"14"},{"size":36,"mtime":1607944934013,"results":"22","hashOfConfig":"14"},{"size":4963,"mtime":1607947766104,"results":"23","hashOfConfig":"14"},{"size":4291,"mtime":1608027736735,"results":"24","hashOfConfig":"14"},{"size":3769,"mtime":1608021632201,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1eayfkn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/index.tsx",[],["53","54"],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/reportWebVitals.ts",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/App.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/index.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/Projects.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/Title.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/index.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/MenuItems.tsx",["55","56"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport LibraryBooksOutlinedIcon from '@material-ui/icons/LibraryBooksOutlined';\nimport GroupOutlinedIcon from '@material-ui/icons/GroupOutlined';\n\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\n\nimport AddUser from './AddUser';\n\n\n\nenum OperationType { USER, PROJECT }\n\nclass OperationsState { \n  enabled: boolean;\n  type?: OperationType\n\n  constructor(enabled: boolean, type?: OperationType) {\n    this.enabled = enabled;\n    this.type = type;\n  }\n}\n\nexport const Operations = ({}) => {\n  const [open, setOpen] = React.useState(new OperationsState(false));\n  \n  const openAdd = (type: OperationType) => {\n    setOpen(new OperationsState(true, type));\n  };\n  const closeAdd = () => {\n    setOpen(new OperationsState(false));\n  };\n\n  return (\n    <div>\n      <AddUser open={open.enabled && open.type === OperationType.USER} handleClose={closeAdd} /> \n    \n      <ListSubheader inset>Operation</ListSubheader>\n      <ListItem button onClick={() => openAdd(OperationType.USER)}>\n        <ListItemIcon>\n          <PersonAddOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Add User\"/>\n      </ListItem>\n      <ListItem button onClick={() => openAdd(OperationType.PROJECT)}>\n        <ListItemIcon>\n          <LibraryAddOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Add Project\" />\n      </ListItem>\n    </div>);\n}\n\nexport const Views = ({}) => {\n  return (\n    <div>\n      <ListSubheader inset>Views</ListSubheader>\n      <ListItem button>\n        <ListItemIcon>\n          <GroupOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"List Users\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <LibraryBooksOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"List Projects\" />\n      </ListItem>\n    </div>);\n  }","/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Shell/index.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Shell/Shells.tsx",[],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/MenuItems/AddUser.tsx",["57","58","59","60"],"/home/olev/Development/hdes/hdes-dev-tools/hdes-pm-ide/src/core/Projects/AddUserToProject.tsx",["61"],"import React from 'react';\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\n\ntype AddUserProps = {\n  open: boolean,\n  handleClose: () => void\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nfunction getStyles(name:string, personName:string[], theme:Theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\n\n\nconst AddUserToProject: React.FC<AddUserProps> = ({open, handleClose}) => {\n  \n  const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setPersonName(event.target.value as string[]);\n  };\n  \n  const classes = useStyles();\n  const theme = useTheme();\n  \n  return <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            To add users to project, please select one more users from the selection.\n          </DialogContentText>\n          \n          <FormControl fullWidth>\n            <InputLabel id=\"projects-label\">List of users</InputLabel>\n            <Select\n              labelId=\"projects-label\"\n              id=\"projects\"\n              margin=\"dense\"\n              fullWidth\n              multiple\n              value={personName}\n              onChange={handleChange}\n              input={<Input id=\"select-multiple-chip\" />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {(selected as string[]).map((value) => (\n                    <Chip key={value} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}\n            >\n              {names.map((name) => (\n                <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n            </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n  \n}\n\nexport default AddUserToProject;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":29,"column":28,"nodeType":"68","messageId":"69","endLine":29,"endColumn":30},{"ruleId":"66","severity":1,"message":"67","line":59,"column":23,"nodeType":"68","messageId":"69","endLine":59,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":2,"column":22,"nodeType":"72","messageId":"73","endLine":2,"endColumn":30},{"ruleId":"70","severity":1,"message":"74","line":2,"column":32,"nodeType":"72","messageId":"73","endLine":2,"endColumn":37},{"ruleId":"70","severity":1,"message":"75","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":76,"column":9,"nodeType":"72","messageId":"73","endLine":76,"endColumn":26},{"ruleId":"70","severity":1,"message":"77","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":17},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'FormLabel' is defined but never used.","'handleChangeIndex' is assigned a value but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]