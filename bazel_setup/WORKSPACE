workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "digiexpress-monorepo",
)

# Core function for downloading dependencies
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# This section is for 'aspect build' https://github.com/aspect-build
# Download 'aspect' library
http_archive(
    name = "aspect_rules_js",
    sha256 = "dcd1567d4a93a8634ec0b888b371a60b93c18d980f77dace02eb176531a71fcf",
    strip_prefix = "rules_js-1.26.0",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.26.0/rules_js-v1.26.0.tar.gz",
)

# Download 'aspect' library
http_archive(
    name = "aspect_rules_ts",
    sha256 = "ace5b609603d9b5b875d56c9c07182357c4ee495030f40dcefb10d443ba8c208",
    strip_prefix = "rules_ts-1.4.0",
    url = "https://github.com/aspect-build/rules_ts/releases/download/v1.4.0/rules_ts-v1.4.0.tar.gz",
)

# Download 'aspect' library
http_archive(
    name = "aspect_rules_jest",
    sha256 = "d3bb833f74b8ad054e6bff5e41606ff10a62880cc99e4d480f4bdfa70add1ba7",
    strip_prefix = "rules_jest-0.18.4",
    url = "https://github.com/aspect-build/rules_jest/releases/download/v0.18.4/rules_jest-v0.18.4.tar.gz",
)

# Load and call 'aspect' library 'init' methods, this is part of 'aspect-build'
load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

# Load and call 'aspect' library 'init' methods, this is part of 'aspect-build'
load("@aspect_rules_ts//ts:repositories.bzl", "rules_ts_dependencies")
rules_ts_dependencies(ts_version_from = "//typescript-projects:package.json")

# Load and call 'aspect' library 'init' methods, this is part of 'aspect-build'
load("@aspect_rules_jest//jest:dependencies.bzl", "rules_jest_dependencies")
rules_jest_dependencies()

# Load and call 'aspect' library for NODE, this is part of 'aspect-build' - https://github.com/bazelbuild/rules_nodejs
load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

# Load and call 'aspect' library
# This is integration to npm:
#   - add supports to react scripts
#   - add supports to typescript compiler
#   - add supports to pnpm
#   - uses pnpm lock file to import libraries into bazel context
#   - exposes all lock file libraries to bazel under '@npm//' with some extras
load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
npm_translate_lock(
    name = "npm",
    bins = {
        # derived from "bin" attribute in node_modules/react-scripts/package.json
        "react-scripts": {
            "react-scripts": "./bin/react-scripts.js",
        },

        # derived from "bin" attribute in node_modules/typescript/package.json
        "typescript": {
            "tsc": "./bin/tsc",
            "tsserver": "./bin/tsserver",
        },

    },
    npmrc = "//typescript-projects:.npmrc",
    pnpm_lock = "//typescript-projects:pnpm-lock.yaml",
    public_hoist_packages = {
        "eslint-config-react-app": [""],
        "eslint": [""],
    },
    verify_node_modules_ignored = "//:.bazelignore",
)

# Init npm in bazel
load("@npm//:repositories.bzl", "npm_repositories")
npm_repositories()
