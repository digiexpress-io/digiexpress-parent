decision-table MatrixDT ({ name: STRING, lastName: STRING }) :
  {
              total: INTEGER = sum(_matched), // total score of hit columns // sum the values that where produces by the mapping
    possibleAverage: INTEGER = avg(_constants), // avg score hit columns
        possibleMax: INTEGER = sum(_constants.map(row -> max(row))) // sum max possible score of defined mapping value => sum( max(lastName), max(name))
  } {
  
  map(STRING) to (INTEGER)
  when(_ = 'BOB', _ = 'SAM', ?) // _ signifies placeholder
    lastName({ 10, 20, 50 }) // lastName = 'BOB' maps to '10', lastName = 'SAM' maps to '20', all the rest of cases map to 30  
        name({ 20, 50, 60 })
  
}