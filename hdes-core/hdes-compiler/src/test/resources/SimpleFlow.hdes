
decision-table Scoring {
  accepts { arg INTEGER }
  returns { score INTEGER }
  
  matches FIRST {
    when { _ between 1 and 30 } then { 10 }
    when { ? } then { 20 }
  }
}


flow SimpleFlow {

  accepts { arg1 INTEGER, arg2 INTEGER }
  returns { score INTEGER }
  
  steps {
    
    InitialScoring {
      call Scoring { arg: arg1 }
      then Decision
    }
    
    Decision {
      when { InitialScoring.score > 10 } then ExtraScoring
      then end-as { InitialScoring.score } 
    }
  
    ExtraScoring {
      call Scoring { arg: arg2 }
      then end-as { _score }
    }
  }
}