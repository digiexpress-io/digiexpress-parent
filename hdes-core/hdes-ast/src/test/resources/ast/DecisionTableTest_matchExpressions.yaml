---
token:
  text: "decisiontablebasic(name:STRING,lastName:STRING):{value:INTEGER,exp:INTEGER=value+20}{findFirst(){when(_!='bob'or_='same'or_='professor',_='woman'or_='man').add(4590)when(_!='bob1'or_='same'or_='professor2',_='woman2'or_='man2').add(4590)}}<EOF>"
  start:
    line: 1
    col: 1
  end:
    line: 8
    col: 1
values:
- token:
    text: "basic(name:STRING,lastName:STRING):{value:INTEGER,exp:INTEGER=value+20}{findFirst(){when(_!='bob'or_='same'or_='professor',_='woman'or_='man').add(4590)when(_!='bob1'or_='same'or_='professor2',_='woman2'or_='man2').add(4590)}}"
    start:
      line: 1
      col: 15
    end:
      line: 7
      col: 2
  id:
    token:
      text: "basic"
      start:
        line: 1
        col: 15
      end:
        line: 1
        col: 20
    value: "basic"
    nodeType: "BODY_ID"
  headers:
    token:
      text: "(name:STRING,lastName:STRING):{value:INTEGER,exp:INTEGER=value+20}"
      start:
        line: 1
        col: 20
      end:
        line: 1
        col: 97
    acceptDefs:
    - token:
        text: "name:STRING"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 33
      required: true
      name: "name"
      array: false
      context: "ACCEPTS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: true
        present: false
      formulaOverAll:
        empty: true
        present: false
      type: "STRING"
      nodeType: "TYPE_SCALAR"
    - token:
        text: "lastName:STRING"
        start:
          line: 1
          col: 35
        end:
          line: 1
          col: 51
      required: true
      name: "lastName"
      array: false
      context: "ACCEPTS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: true
        present: false
      formulaOverAll:
        empty: true
        present: false
      type: "STRING"
      nodeType: "TYPE_SCALAR"
    returnDefs:
    - token:
        text: "value:INTEGER"
        start:
          line: 1
          col: 55
        end:
          line: 1
          col: 69
      required: true
      name: "value"
      array: false
      context: "RETURNS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: true
        present: false
      formulaOverAll:
        empty: true
        present: false
      type: "INTEGER"
      nodeType: "TYPE_SCALAR"
    - token:
        text: "exp:INTEGER=value+20"
        start:
          line: 1
          col: 71
        end:
          line: 1
          col: 96
      required: false
      name: "exp"
      array: false
      context: "RETURNS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: false
        present: true
      formulaOverAll:
        empty: false
        present: true
      type: "INTEGER"
      nodeType: "TYPE_SCALAR"
    nodeType: "TYPES"
  hitPolicy:
    token:
      text: "findFirst(){when(_!='bob'or_='same'or_='professor',_='woman'or_='man').add(4590)when(_!='bob1'or_='same'or_='professor2',_='woman2'or_='man2').add(4590)}"
      start:
        line: 3
        col: 3
      end:
        line: 6
        col: 4
    rows:
    - token:
        text: "when(_!='bob'or_='same'or_='professor',_='woman'or_='man').add(4590)"
        start:
          line: 4
          col: 5
        end:
          line: 4
          col: 94
      when:
        token:
          text: "(_!='bob'or_='same'or_='professor',_='woman'or_='man')"
          start:
            line: 4
            col: 9
          end:
            line: 4
            col: 84
        values:
        - token:
            text: "_!='bob'or_='same'or_='professor'"
            start:
              line: 4
              col: 10
            end:
              line: 4
              col: 54
          id:
            token:
              text: "_!='bob'or_='same'or_='professor'"
              start:
                line: 4
                col: 10
              end:
                line: 4
                col: 54
            value: ""
            nodeType: "BODY_ID"
          headers:
            token:
              text: "_!='bob'or_='same'or_='professor'"
              start:
                line: 4
                col: 10
              end:
                line: 4
                col: 54
            acceptDefs: []
            returnDefs: []
            nodeType: "TYPES"
          src: "_ != 'bob'  or _ = 'same' or _ = 'professor'"
          value:
            token:
              text: "_!='bob'or_='same'or_='professor'"
              start:
                line: 4
                col: 10
              end:
                line: 4
                col: 54
            left:
              token:
                text: "_!='bob'or_='same'"
                start:
                  line: 4
                  col: 10
                end:
                  line: 4
                  col: 35
              left:
                token:
                  text: "_!='bob'"
                  start:
                    line: 4
                    col: 10
                  end:
                    line: 4
                    col: 20
                type: "NOTEQUAL"
                left:
                  token:
                    text: "_"
                    start:
                      line: 4
                      col: 10
                    end:
                      line: 4
                      col: 11
                  nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
                right:
                  token:
                    text: "'bob'"
                    start:
                      line: 4
                      col: 15
                    end:
                      line: 4
                      col: 20
                  type: "STRING"
                  value: "bob"
                  nodeType: "TYPE_LITERAL"
                nodeType: "EX_EQUALITY"
              right:
                token:
                  text: "_='same'"
                  start:
                    line: 4
                    col: 25
                  end:
                    line: 4
                    col: 35
                type: "EQUAL"
                left:
                  token:
                    text: "_"
                    start:
                      line: 4
                      col: 25
                    end:
                      line: 4
                      col: 26
                  nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
                right:
                  token:
                    text: "'same'"
                    start:
                      line: 4
                      col: 29
                    end:
                      line: 4
                      col: 35
                  type: "STRING"
                  value: "same"
                  nodeType: "TYPE_LITERAL"
                nodeType: "EX_EQUALITY"
              nodeType: "EX_OR"
            right:
              token:
                text: "_='professor'"
                start:
                  line: 4
                  col: 39
                end:
                  line: 4
                  col: 54
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 4
                    col: 39
                  end:
                    line: 4
                    col: 40
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'professor'"
                  start:
                    line: 4
                    col: 43
                  end:
                    line: 4
                    col: 54
                type: "STRING"
                value: "professor"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            nodeType: "EX_OR"
          nodeType: "BODY_EX"
        - token:
            text: "_='woman'or_='man'"
            start:
              line: 4
              col: 57
            end:
              line: 4
              col: 82
          id:
            token:
              text: "_='woman'or_='man'"
              start:
                line: 4
                col: 57
              end:
                line: 4
                col: 82
            value: ""
            nodeType: "BODY_ID"
          headers:
            token:
              text: "_='woman'or_='man'"
              start:
                line: 4
                col: 57
              end:
                line: 4
                col: 82
            acceptDefs: []
            returnDefs: []
            nodeType: "TYPES"
          src: "_ = 'woman'  or _ = 'man'"
          value:
            token:
              text: "_='woman'or_='man'"
              start:
                line: 4
                col: 57
              end:
                line: 4
                col: 82
            left:
              token:
                text: "_='woman'"
                start:
                  line: 4
                  col: 57
                end:
                  line: 4
                  col: 68
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 4
                    col: 57
                  end:
                    line: 4
                    col: 58
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'woman'"
                  start:
                    line: 4
                    col: 61
                  end:
                    line: 4
                    col: 68
                type: "STRING"
                value: "woman"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            right:
              token:
                text: "_='man'"
                start:
                  line: 4
                  col: 73
                end:
                  line: 4
                  col: 82
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 4
                    col: 73
                  end:
                    line: 4
                    col: 74
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'man'"
                  start:
                    line: 4
                    col: 77
                  end:
                    line: 4
                    col: 82
                type: "STRING"
                value: "man"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            nodeType: "EX_OR"
          nodeType: "BODY_EX"
        nodeType: "DT_RULE_WHEN"
      then:
        token:
          text: "4590"
          start:
            line: 4
            col: 89
          end:
            line: 4
            col: 93
        values:
        - token:
            text: "4590"
            start:
              line: 4
              col: 89
            end:
              line: 4
              col: 93
          type: "INTEGER"
          value: "4590"
          nodeType: "TYPE_LITERAL"
        nodeType: "DT_RULE_THEN"
      text: "when(_ != 'bob'  or _ = 'same' or _ = 'professor',  _ = 'woman'  or _\
        \ = 'man' ).add(4590)"
      nodeType: "DT_RULE_WHEN_THEN"
    - token:
        text: "when(_!='bob1'or_='same'or_='professor2',_='woman2'or_='man2').add(4590)"
        start:
          line: 5
          col: 5
        end:
          line: 5
          col: 94
      when:
        token:
          text: "(_!='bob1'or_='same'or_='professor2',_='woman2'or_='man2')"
          start:
            line: 5
            col: 9
          end:
            line: 5
            col: 84
        values:
        - token:
            text: "_!='bob1'or_='same'or_='professor2'"
            start:
              line: 5
              col: 10
            end:
              line: 5
              col: 55
          id:
            token:
              text: "_!='bob1'or_='same'or_='professor2'"
              start:
                line: 5
                col: 10
              end:
                line: 5
                col: 55
            value: ""
            nodeType: "BODY_ID"
          headers:
            token:
              text: "_!='bob1'or_='same'or_='professor2'"
              start:
                line: 5
                col: 10
              end:
                line: 5
                col: 55
            acceptDefs: []
            returnDefs: []
            nodeType: "TYPES"
          src: "_ != 'bob1' or _ = 'same' or _ = 'professor2'"
          value:
            token:
              text: "_!='bob1'or_='same'or_='professor2'"
              start:
                line: 5
                col: 10
              end:
                line: 5
                col: 55
            left:
              token:
                text: "_!='bob1'or_='same'"
                start:
                  line: 5
                  col: 10
                end:
                  line: 5
                  col: 35
              left:
                token:
                  text: "_!='bob1'"
                  start:
                    line: 5
                    col: 10
                  end:
                    line: 5
                    col: 21
                type: "NOTEQUAL"
                left:
                  token:
                    text: "_"
                    start:
                      line: 5
                      col: 10
                    end:
                      line: 5
                      col: 11
                  nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
                right:
                  token:
                    text: "'bob1'"
                    start:
                      line: 5
                      col: 15
                    end:
                      line: 5
                      col: 21
                  type: "STRING"
                  value: "bob1"
                  nodeType: "TYPE_LITERAL"
                nodeType: "EX_EQUALITY"
              right:
                token:
                  text: "_='same'"
                  start:
                    line: 5
                    col: 25
                  end:
                    line: 5
                    col: 35
                type: "EQUAL"
                left:
                  token:
                    text: "_"
                    start:
                      line: 5
                      col: 25
                    end:
                      line: 5
                      col: 26
                  nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
                right:
                  token:
                    text: "'same'"
                    start:
                      line: 5
                      col: 29
                    end:
                      line: 5
                      col: 35
                  type: "STRING"
                  value: "same"
                  nodeType: "TYPE_LITERAL"
                nodeType: "EX_EQUALITY"
              nodeType: "EX_OR"
            right:
              token:
                text: "_='professor2'"
                start:
                  line: 5
                  col: 39
                end:
                  line: 5
                  col: 55
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 5
                    col: 39
                  end:
                    line: 5
                    col: 40
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'professor2'"
                  start:
                    line: 5
                    col: 43
                  end:
                    line: 5
                    col: 55
                type: "STRING"
                value: "professor2"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            nodeType: "EX_OR"
          nodeType: "BODY_EX"
        - token:
            text: "_='woman2'or_='man2'"
            start:
              line: 5
              col: 57
            end:
              line: 5
              col: 83
          id:
            token:
              text: "_='woman2'or_='man2'"
              start:
                line: 5
                col: 57
              end:
                line: 5
                col: 83
            value: ""
            nodeType: "BODY_ID"
          headers:
            token:
              text: "_='woman2'or_='man2'"
              start:
                line: 5
                col: 57
              end:
                line: 5
                col: 83
            acceptDefs: []
            returnDefs: []
            nodeType: "TYPES"
          src: "_ = 'woman2' or _ = 'man2'"
          value:
            token:
              text: "_='woman2'or_='man2'"
              start:
                line: 5
                col: 57
              end:
                line: 5
                col: 83
            left:
              token:
                text: "_='woman2'"
                start:
                  line: 5
                  col: 57
                end:
                  line: 5
                  col: 69
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 5
                    col: 57
                  end:
                    line: 5
                    col: 58
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'woman2'"
                  start:
                    line: 5
                    col: 61
                  end:
                    line: 5
                    col: 69
                type: "STRING"
                value: "woman2"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            right:
              token:
                text: "_='man2'"
                start:
                  line: 5
                  col: 73
                end:
                  line: 5
                  col: 83
              type: "EQUAL"
              left:
                token:
                  text: "_"
                  start:
                    line: 5
                    col: 73
                  end:
                    line: 5
                    col: 74
                nodeType: "INVOCATION_EMPTY_PLACEHOLDER"
              right:
                token:
                  text: "'man2'"
                  start:
                    line: 5
                    col: 77
                  end:
                    line: 5
                    col: 83
                type: "STRING"
                value: "man2"
                nodeType: "TYPE_LITERAL"
              nodeType: "EX_EQUALITY"
            nodeType: "EX_OR"
          nodeType: "BODY_EX"
        nodeType: "DT_RULE_WHEN"
      then:
        token:
          text: "4590"
          start:
            line: 5
            col: 89
          end:
            line: 5
            col: 93
        values:
        - token:
            text: "4590"
            start:
              line: 5
              col: 89
            end:
              line: 5
              col: 93
          type: "INTEGER"
          value: "4590"
          nodeType: "TYPE_LITERAL"
        nodeType: "DT_RULE_THEN"
      text: "when(_ != 'bob1' or _ = 'same' or _ = 'professor2', _ = 'woman2' or _\
        \ = 'man2').add(4590)"
      nodeType: "DT_RULE_WHEN_THEN"
    nodeType: "DT_HITPOLICY_FIRST"
  constants:
    token:
      text: "(name:STRING,lastName:STRING):{value:INTEGER,exp:INTEGER=value+20}"
      start:
        line: 1
        col: 20
      end:
        line: 1
        col: 97
    required: true
    name: "constants"
    array: true
    context: "CONSTANTS"
    values:
    - token:
        text: "value:INTEGER"
        start:
          line: 1
          col: 55
        end:
          line: 1
          col: 69
      required: true
      name: "value"
      array: false
      context: "RETURNS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: true
        present: false
      formulaOverAll:
        empty: true
        present: false
      type: "INTEGER"
      nodeType: "TYPE_SCALAR"
    nodeType: "TYPE_OBJECT"
  matched:
    token:
      text: "(name:STRING,lastName:STRING):{value:INTEGER,exp:INTEGER=value+20}"
      start:
        line: 1
        col: 20
      end:
        line: 1
        col: 97
    required: true
    name: ""
    array: false
    context: "MATCHES"
    values:
    - token:
        text: "value:INTEGER"
        start:
          line: 1
          col: 55
        end:
          line: 1
          col: 69
      required: true
      name: "value"
      array: false
      context: "RETURNS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: true
        present: false
      formulaOverAll:
        empty: true
        present: false
      type: "INTEGER"
      nodeType: "TYPE_SCALAR"
    - token:
        text: "exp:INTEGER=value+20"
        start:
          line: 1
          col: 71
        end:
          line: 1
          col: 96
      required: false
      name: "exp"
      array: false
      context: "RETURNS"
      debugValue:
        empty: true
        present: false
      formula:
        empty: false
        present: true
      formulaOverAll:
        empty: false
        present: true
      type: "INTEGER"
      nodeType: "TYPE_SCALAR"
    nodeType: "TYPE_OBJECT"
  nodeType: "BODY_DT"
nodeType: "ROOT_CONTENT"
