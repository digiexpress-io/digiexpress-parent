load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary", "pkg_web")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("@npm//history-server:index.bzl", "history_server")
load("@npm//html-insert-assets:index.bzl", "html_insert_assets")
load("//ts-parent/tools:index.bzl", "terser_minified", "ts_project")


SRCS = glob(
    ["src/**/*.ts",
     "src/**/*.tsx",
     "src/**/*.js",
     ],
    exclude = ["src/**/*.spec.ts"],
) + ["main.dev.tsx"] + ["//ts-parent/pkgs/@types:index.d.ts"]

# Compile to JS
ts_project(
    name = "compiler-app-src",
    srcs = SRCS,

    tsconfig = "//ts-parent:tsconfig.json",
    deps = ["//ts-parent/pkgs/common:lib",
            "@npm//react",
            "@npm//@types/react",
            "@npm//@types/react-dom",
            "@npm//react-dom"],
)

# Bundle JS files
rollup_bundle(
    name = "bundle-es2015",
    srcs = [":compiler-app-src"],
    output_dir = True,
    sourcemap = "true",
    config_file = "rollup.config.js",
#    entry_point = "index.js",
    entry_points = {
#        ":main.prod.ts": "index.prod",
        ":main.dev.tsx": "index.dev",
    },
    deps = [
        "//ts-parent/pkgs/common:lib",
        "@npm//react-scripts",
        "@npm//react",
        "@npm//react-dom",
        "@npm//@babel/preset-react",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-replace",
        "@npm//@rollup/plugin-commonjs",
        "@npm//rollup-plugin-postcss",
        "@npm//rollup-plugin-peer-deps-external",
        "@npm//@rollup/plugin-image"
    ],
)


# Files that we serve in both development and production
_ASSETS = [
    "//ts-parent/public:favicon.ico",
    "//ts-parent/public:manifest.json",
]

html_insert_assets(
    name = "inject_scripts_for_dev",
    outs = ["index.html"],
    args = [
        "--html=$(execpath //ts-parent/public:index.html)",
        "--out=$@",
        "--roots=. $(RULEDIR)",
    ] +
    ["--assets $(execpath %s)" % s for s in _ASSETS] +
    ["--scripts --module $(execpath :bundle-es2015)/index.dev.js" ] +
    ["--manifest $(execpath //ts-parent/public:manifest.json)" ],
    data = [
        "//ts-parent/public:index.html",
        ":bundle-es2015",
    ] + _ASSETS,
)


pkg_web(
    name = "devapp",
    srcs = _ASSETS + [
        ":bundle-es2015",
        ":inject_scripts_for_dev",
        "//ts-parent/assets",
    ]
)

history_server(
    name = "devserver",
    data = [":devapp"],
    templated_args = ["-a $$(rlocation $(rootpath :devapp))"],
)

