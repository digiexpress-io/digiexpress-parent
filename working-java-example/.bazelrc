# common --enable_bzlmod
build --javacopt="-source 15 -target 15"
build --java_language_version=15
build --nojava_header_compilation




# Cache action outputs on disk so they persist across output_base and bazel shutdown (eg. changing branches)

build --disk_cache=~/.cache/bazel-disk-cache


# Bazel will create symlinks from the workspace directory to output artifacts.
# Build results will be placed in a directory called "dist/bin"
# Other directories will be created like "dist/testlogs"
# Be aware that this will still create a bazel-out symlink in
# your project directory, which you must exclude from version control and your
# editor's search path.

build --symlink_prefix=dist/

# To disable the symlinks altogether (including bazel-out) you can use
# build --symlink_prefix=/
# however this makes it harder to find outputs.


# Turn off legacy external runfiles
# This prevents accidentally depending on this feature, which Bazel will remove.
build --nolegacy_external_runfiles


# Turn on --incompatible_strict_action_env which was on by default
# in Bazel 0.21.0 but turned off again in 0.22.0. Follow
# https://github.com/bazelbuild/bazel/issues/7026 for more details.
# This flag is needed to so that the bazel cache is not invalidated
# when running bazel via `yarn bazel`.
# See https://github.com/angular/angular/issues/27514.

build --incompatible_strict_action_env
run --incompatible_strict_action_env