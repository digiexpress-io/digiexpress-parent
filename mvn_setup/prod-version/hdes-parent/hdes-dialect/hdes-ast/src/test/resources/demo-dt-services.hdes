
// first DT
decision-table Basic ({ name: string, lastName: string, type: integer }): { value: integer }
{
  
  findAll({
    when( ?, ?, _ between 1 and 30  ) add({ 20   })
    when( _ = 'bob', _ = 'woman', ? ) add({ 4570 })
  })
}

// second DT
decision-table MatrixDT ({ name: string, lastName: string }): {
    totalScore:      integer = sum(_matched), // total score of hit columns // sum the values that where produces by the mapping//
    avgScore:        integer = avg(_constants), // avg score hit columns
    totalPossible:   integer = sum(_constants.map(row -> max(row))) // sum max possible score of defined mapping value => sum( max(lastName), max(name))
  }
{
  
  map(string) to(integer)
  when(_ IN('BOB', 'SMTH', 'X'), _ = 'SAM', ?) // _ signifies placeholder
  
  lastName({ 10, 20, 50 }) // lastName = 'BOB' maps to '10', lastName = 'SAM' maps to '20', all the rest of cases map to 30  
  name({ 20, 50, 60 })

}