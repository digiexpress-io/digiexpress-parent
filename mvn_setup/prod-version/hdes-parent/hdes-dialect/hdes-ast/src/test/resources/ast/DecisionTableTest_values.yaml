---
token:
  text: "decision-tablebasic({firstName:STRINGlastName:STRING}):{}{map(string)to(integer)when(_='bob',_='sam',_='viv')firstName({1,2,3})lastName({3,10,20})}<EOF>"
  start:
    line: 1
    col: 1
  end:
    line: 8
    col: 1
values:
- token:
    text: "basic({firstName:STRINGlastName:STRING}):{}{map(string)to(integer)when(_='bob',_='sam',_='viv')firstName({1,2,3})lastName({3,10,20})}"
    start:
      line: 1
      col: 16
    end:
      line: 7
      col: 2
  id:
    token:
      text: "basic"
      start:
        line: 1
        col: 16
      end:
        line: 1
        col: 21
    value: "basic"
  headers:
    token:
      text: "({firstName:STRINGlastName:STRING}):{}"
      start:
        line: 1
        col: 21
      end:
        line: 1
        col: 64
    acceptDefs:
    - token:
        text: "firstName:STRING"
        start:
          line: 1
          col: 24
        end:
          line: 1
          col: 41
      required: true
      name: "firstName"
      array: false
      context: "ACCEPTS"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "STRING"
    - token:
        text: "lastName:STRING"
        start:
          line: 1
          col: 42
        end:
          line: 1
          col: 58
      required: true
      name: "lastName"
      array: false
      context: "ACCEPTS"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "STRING"
    returnDefs: []
  hitPolicy:
    token:
      text: "map(string)to(integer)when(_='bob',_='sam',_='viv')firstName({1,2,3})lastName({3,10,20})"
      start:
        line: 2
        col: 3
      end:
        line: 6
        col: 25
    defFrom: "STRING"
    defTo: "INTEGER"
    when:
      token:
        text: "(_='bob',_='sam',_='viv')"
        start:
          line: 3
          col: 7
        end:
          line: 3
          col: 42
      values:
      - token:
          text: "_='bob'"
          start:
            line: 3
            col: 9
          end:
            line: 3
            col: 18
        id:
          token:
            text: "_='bob'"
            start:
              line: 3
              col: 9
            end:
              line: 3
              col: 18
          value: ""
        headers:
          token:
            text: "_='bob'"
            start:
              line: 3
              col: 9
            end:
              line: 3
              col: 18
          acceptDefs: []
          returnDefs: []
        src: "_ = 'bob'"
        value:
          token:
            text: "_='bob'"
            start:
              line: 3
              col: 9
            end:
              line: 3
              col: 18
          type: "EQUAL"
          left:
            token:
              text: "_"
              start:
                line: 3
                col: 9
              end:
                line: 3
                col: 10
          right:
            token:
              text: "'bob'"
              start:
                line: 3
                col: 13
              end:
                line: 3
                col: 18
            type: "STRING"
            value: "bob"
      - token:
          text: "_='sam'"
          start:
            line: 3
            col: 20
          end:
            line: 3
            col: 29
        id:
          token:
            text: "_='sam'"
            start:
              line: 3
              col: 20
            end:
              line: 3
              col: 29
          value: ""
        headers:
          token:
            text: "_='sam'"
            start:
              line: 3
              col: 20
            end:
              line: 3
              col: 29
          acceptDefs: []
          returnDefs: []
        src: "_ = 'sam'"
        value:
          token:
            text: "_='sam'"
            start:
              line: 3
              col: 20
            end:
              line: 3
              col: 29
          type: "EQUAL"
          left:
            token:
              text: "_"
              start:
                line: 3
                col: 20
              end:
                line: 3
                col: 21
          right:
            token:
              text: "'sam'"
              start:
                line: 3
                col: 24
              end:
                line: 3
                col: 29
            type: "STRING"
            value: "sam"
      - token:
          text: "_='viv'"
          start:
            line: 3
            col: 31
          end:
            line: 3
            col: 40
        id:
          token:
            text: "_='viv'"
            start:
              line: 3
              col: 31
            end:
              line: 3
              col: 40
          value: ""
        headers:
          token:
            text: "_='viv'"
            start:
              line: 3
              col: 31
            end:
              line: 3
              col: 40
          acceptDefs: []
          returnDefs: []
        src: "_ = 'viv'"
        value:
          token:
            text: "_='viv'"
            start:
              line: 3
              col: 31
            end:
              line: 3
              col: 40
          type: "EQUAL"
          left:
            token:
              text: "_"
              start:
                line: 3
                col: 31
              end:
                line: 3
                col: 32
          right:
            token:
              text: "'viv'"
              start:
                line: 3
                col: 35
              end:
                line: 3
                col: 40
            type: "STRING"
            value: "viv"
    mapsTo:
    - token:
        text: "firstName({1,2,3})"
        start:
          line: 5
          col: 3
        end:
          line: 5
          col: 24
      accepts:
        token:
          text: "firstName"
          start:
            line: 5
            col: 3
          end:
            line: 5
            col: 12
        value: "firstName"
      then:
        token:
          text: "{1,2,3}"
          start:
            line: 5
            col: 13
          end:
            line: 5
            col: 23
        values:
        - token:
            text: "1"
            start:
              line: 5
              col: 14
            end:
              line: 5
              col: 15
          type: "INTEGER"
          value: "1"
        - token:
            text: "2"
            start:
              line: 5
              col: 17
            end:
              line: 5
              col: 18
          type: "INTEGER"
          value: "2"
        - token:
            text: "3"
            start:
              line: 5
              col: 20
            end:
              line: 5
              col: 21
          type: "INTEGER"
          value: "3"
    - token:
        text: "lastName({3,10,20})"
        start:
          line: 6
          col: 3
        end:
          line: 6
          col: 25
      accepts:
        token:
          text: "lastName"
          start:
            line: 6
            col: 3
          end:
            line: 6
            col: 11
        value: "lastName"
      then:
        token:
          text: "{3,10,20}"
          start:
            line: 6
            col: 12
          end:
            line: 6
            col: 24
        values:
        - token:
            text: "3"
            start:
              line: 6
              col: 13
            end:
              line: 6
              col: 14
          type: "INTEGER"
          value: "3"
        - token:
            text: "10"
            start:
              line: 6
              col: 16
            end:
              line: 6
              col: 18
          type: "INTEGER"
          value: "10"
        - token:
            text: "20"
            start:
              line: 6
              col: 20
            end:
              line: 6
              col: 22
          type: "INTEGER"
          value: "20"
  constants:
    token:
      text: "({firstName:STRINGlastName:STRING}):{}"
      start:
        line: 1
        col: 21
      end:
        line: 1
        col: 64
    required: true
    name: "constants"
    array: true
    context: "CONSTANTS"
    values:
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: ""
      array: true
      context: "CONSTANTS"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "INTEGER"
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: "firstName"
      array: true
      context: "CONSTANTS"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "INTEGER"
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: "lastName"
      array: true
      context: "CONSTANTS"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "INTEGER"
  matched:
    token:
      text: "({firstName:STRINGlastName:STRING}):{}"
      start:
        line: 1
        col: 21
      end:
        line: 1
        col: 64
    required: true
    name: "instance"
    array: false
    context: "MATCHES"
    values:
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: "instance"
      array: true
      context: "MATCHES"
      values:
      - token:
          text: "({firstName:STRINGlastName:STRING}):{}"
          start:
            line: 1
            col: 21
          end:
            line: 1
            col: 64
        required: true
        name: ""
        array: true
        context: "MATCHES"
        debugValue: null
        formula: null
        formulaOverAll: null
        type: "INTEGER"
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: "firstName"
      array: true
      context: "MATCHES"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "INTEGER"
    - token:
        text: "({firstName:STRINGlastName:STRING}):{}"
        start:
          line: 1
          col: 21
        end:
          line: 1
          col: 64
      required: true
      name: "lastName"
      array: true
      context: "MATCHES"
      debugValue: null
      formula: null
      formulaOverAll: null
      type: "INTEGER"