---
token:
  text: "expression{xin('aaa','bbb','x')}expression{xin(y,x,z)}expression{sum(y,x,z)}expression{sum(10,20,30)}expression{sum(10_0000,0.20,30)}expression{sum(sum(),sum(sum(10,20)),x.value,30,z.value,v.x=10?sum(sum(10,20),t):100)}expression{x.value.children}expression{x.value.children.value}expression{5=10and20=30}expression{x=10ory=30}expression{x=10orsum(y,x,z)=-30}expression{true=false?10:sum(20)}expression{-x}expression{+x+(1-20)}expression{(x*y/20)+1}<EOF>"
  start:
    line: 1
    col: 1
  end:
    line: 16
    col: 1
values:
- token:
    text: "xin('aaa','bbb','x')"
    start:
      line: 1
      col: 13
    end:
      line: 1
      col: 36
  id:
    token:
      text: "xin('aaa','bbb','x')"
      start:
        line: 1
        col: 13
      end:
        line: 1
        col: 36
    value: ""
  headers:
    token:
      text: "xin('aaa','bbb','x')"
      start:
        line: 1
        col: 13
      end:
        line: 1
        col: 36
    acceptDefs: []
    returnDefs: []
  src: "x in('aaa', 'bbb', 'x')"
  value:
    token:
      text: "xin('aaa','bbb','x')"
      start:
        line: 1
        col: 13
      end:
        line: 1
        col: 36
    left:
      token:
        text: "x"
        start:
          line: 1
          col: 13
        end:
          line: 1
          col: 14
      value: "x"
    right:
    - token:
        text: "'aaa'"
        start:
          line: 1
          col: 18
        end:
          line: 1
          col: 23
      type: "STRING"
      value: "aaa"
    - token:
        text: "'bbb'"
        start:
          line: 1
          col: 25
        end:
          line: 1
          col: 30
      type: "STRING"
      value: "bbb"
    - token:
        text: "'x'"
        start:
          line: 1
          col: 32
        end:
          line: 1
          col: 35
      type: "STRING"
      value: "x"
- token:
    text: "xin(y,x,z)"
    start:
      line: 2
      col: 13
    end:
      line: 2
      col: 26
  id:
    token:
      text: "xin(y,x,z)"
      start:
        line: 2
        col: 13
      end:
        line: 2
        col: 26
    value: ""
  headers:
    token:
      text: "xin(y,x,z)"
      start:
        line: 2
        col: 13
      end:
        line: 2
        col: 26
    acceptDefs: []
    returnDefs: []
  src: "x in(y, x, z)"
  value:
    token:
      text: "xin(y,x,z)"
      start:
        line: 2
        col: 13
      end:
        line: 2
        col: 26
    left:
      token:
        text: "x"
        start:
          line: 2
          col: 13
        end:
          line: 2
          col: 14
      value: "x"
    right:
    - token:
        text: "y"
        start:
          line: 2
          col: 18
        end:
          line: 2
          col: 19
      value: "y"
    - token:
        text: "x"
        start:
          line: 2
          col: 21
        end:
          line: 2
          col: 22
      value: "x"
    - token:
        text: "z"
        start:
          line: 2
          col: 24
        end:
          line: 2
          col: 25
      value: "z"
- token:
    text: "sum(y,x,z)"
    start:
      line: 3
      col: 13
    end:
      line: 3
      col: 25
  id:
    token:
      text: "sum(y,x,z)"
      start:
        line: 3
        col: 13
      end:
        line: 3
        col: 25
    value: ""
  headers:
    token:
      text: "sum(y,x,z)"
      start:
        line: 3
        col: 13
      end:
        line: 3
        col: 25
    acceptDefs: []
    returnDefs: []
  src: "sum(y, x, z)"
  value:
    token:
      text: "sum(y,x,z)"
      start:
        line: 3
        col: 13
      end:
        line: 3
        col: 25
    type: "SUM"
    values:
    - token:
        text: "y"
        start:
          line: 3
          col: 17
        end:
          line: 3
          col: 18
      value: "y"
    - token:
        text: "x"
        start:
          line: 3
          col: 20
        end:
          line: 3
          col: 21
      value: "x"
    - token:
        text: "z"
        start:
          line: 3
          col: 23
        end:
          line: 3
          col: 24
      value: "z"
- token:
    text: "sum(10,20,30)"
    start:
      line: 4
      col: 13
    end:
      line: 4
      col: 28
  id:
    token:
      text: "sum(10,20,30)"
      start:
        line: 4
        col: 13
      end:
        line: 4
        col: 28
    value: ""
  headers:
    token:
      text: "sum(10,20,30)"
      start:
        line: 4
        col: 13
      end:
        line: 4
        col: 28
    acceptDefs: []
    returnDefs: []
  src: "sum(10, 20, 30)"
  value:
    token:
      text: "sum(10,20,30)"
      start:
        line: 4
        col: 13
      end:
        line: 4
        col: 28
    type: "SUM"
    values:
    - token:
        text: "10"
        start:
          line: 4
          col: 17
        end:
          line: 4
          col: 19
      type: "INTEGER"
      value: "10"
    - token:
        text: "20"
        start:
          line: 4
          col: 21
        end:
          line: 4
          col: 23
      type: "INTEGER"
      value: "20"
    - token:
        text: "30"
        start:
          line: 4
          col: 25
        end:
          line: 4
          col: 27
      type: "INTEGER"
      value: "30"
- token:
    text: "sum(10_0000,0.20,30)"
    start:
      line: 5
      col: 13
    end:
      line: 5
      col: 35
  id:
    token:
      text: "sum(10_0000,0.20,30)"
      start:
        line: 5
        col: 13
      end:
        line: 5
        col: 35
    value: ""
  headers:
    token:
      text: "sum(10_0000,0.20,30)"
      start:
        line: 5
        col: 13
      end:
        line: 5
        col: 35
    acceptDefs: []
    returnDefs: []
  src: "sum(10_0000, 0.20, 30)"
  value:
    token:
      text: "sum(10_0000,0.20,30)"
      start:
        line: 5
        col: 13
      end:
        line: 5
        col: 35
    type: "SUM"
    values:
    - token:
        text: "10_0000"
        start:
          line: 5
          col: 17
        end:
          line: 5
          col: 24
      type: "INTEGER"
      value: "100000"
    - token:
        text: "0.20"
        start:
          line: 5
          col: 26
        end:
          line: 5
          col: 30
      type: "DECIMAL"
      value: "0.20"
    - token:
        text: "30"
        start:
          line: 5
          col: 32
        end:
          line: 5
          col: 34
      type: "INTEGER"
      value: "30"
- token:
    text: "sum(sum(),sum(sum(10,20)),x.value,30,z.value,v.x=10?sum(sum(10,20),t):100)"
    start:
      line: 6
      col: 13
    end:
      line: 6
      col: 101
  id:
    token:
      text: "sum(sum(),sum(sum(10,20)),x.value,30,z.value,v.x=10?sum(sum(10,20),t):100)"
      start:
        line: 6
        col: 13
      end:
        line: 6
        col: 101
    value: ""
  headers:
    token:
      text: "sum(sum(),sum(sum(10,20)),x.value,30,z.value,v.x=10?sum(sum(10,20),t):100)"
      start:
        line: 6
        col: 13
      end:
        line: 6
        col: 101
    acceptDefs: []
    returnDefs: []
  src: "sum(sum(), sum(sum(10, 20)), x.value, 30, z.value, v.x = 10 ? sum(sum(10,\
    \ 20), t) : 100)"
  value:
    token:
      text: "sum(sum(),sum(sum(10,20)),x.value,30,z.value,v.x=10?sum(sum(10,20),t):100)"
      start:
        line: 6
        col: 13
      end:
        line: 6
        col: 101
    type: "SUM"
    values:
    - token:
        text: "sum()"
        start:
          line: 6
          col: 17
        end:
          line: 6
          col: 22
      type: "SUM"
      values: []
    - token:
        text: "sum(sum(10,20))"
        start:
          line: 6
          col: 24
        end:
          line: 6
          col: 40
      type: "SUM"
      values:
      - token:
          text: "sum(10,20)"
          start:
            line: 6
            col: 28
          end:
            line: 6
            col: 39
        type: "SUM"
        values:
        - token:
            text: "10"
            start:
              line: 6
              col: 32
            end:
              line: 6
              col: 34
          type: "INTEGER"
          value: "10"
        - token:
            text: "20"
            start:
              line: 6
              col: 36
            end:
              line: 6
              col: 38
          type: "INTEGER"
          value: "20"
    - token:
        text: "x.value"
        start:
          line: 6
          col: 42
        end:
          line: 6
          col: 49
      path:
        token:
          text: "x"
          start:
            line: 6
            col: 42
          end:
            line: 6
            col: 43
        value: "x"
      value:
        token:
          text: "value"
          start:
            line: 6
            col: 44
          end:
            line: 6
            col: 49
        value: "value"
    - token:
        text: "30"
        start:
          line: 6
          col: 51
        end:
          line: 6
          col: 53
      type: "INTEGER"
      value: "30"
    - token:
        text: "z.value"
        start:
          line: 6
          col: 55
        end:
          line: 6
          col: 62
      path:
        token:
          text: "z"
          start:
            line: 6
            col: 55
          end:
            line: 6
            col: 56
        value: "z"
      value:
        token:
          text: "value"
          start:
            line: 6
            col: 57
          end:
            line: 6
            col: 62
        value: "value"
    - token:
        text: "v.x=10?sum(sum(10,20),t):100"
        start:
          line: 6
          col: 64
        end:
          line: 6
          col: 100
      operation:
        token:
          text: "v.x=10"
          start:
            line: 6
            col: 64
          end:
            line: 6
            col: 72
        type: "EQUAL"
        left:
          token:
            text: "v.x"
            start:
              line: 6
              col: 64
            end:
              line: 6
              col: 67
          path:
            token:
              text: "v"
              start:
                line: 6
                col: 64
              end:
                line: 6
                col: 65
            value: "v"
          value:
            token:
              text: "x"
              start:
                line: 6
                col: 66
              end:
                line: 6
                col: 67
            value: "x"
        right:
          token:
            text: "10"
            start:
              line: 6
              col: 70
            end:
              line: 6
              col: 72
          type: "INTEGER"
          value: "10"
      left:
        token:
          text: "sum(sum(10,20),t)"
          start:
            line: 6
            col: 75
          end:
            line: 6
            col: 94
        type: "SUM"
        values:
        - token:
            text: "sum(10,20)"
            start:
              line: 6
              col: 79
            end:
              line: 6
              col: 90
          type: "SUM"
          values:
          - token:
              text: "10"
              start:
                line: 6
                col: 83
              end:
                line: 6
                col: 85
            type: "INTEGER"
            value: "10"
          - token:
              text: "20"
              start:
                line: 6
                col: 87
              end:
                line: 6
                col: 89
            type: "INTEGER"
            value: "20"
        - token:
            text: "t"
            start:
              line: 6
              col: 92
            end:
              line: 6
              col: 93
          value: "t"
      right:
        token:
          text: "100"
          start:
            line: 6
            col: 97
          end:
            line: 6
            col: 100
        type: "INTEGER"
        value: "100"
- token:
    text: "x.value.children"
    start:
      line: 7
      col: 13
    end:
      line: 7
      col: 29
  id:
    token:
      text: "x.value.children"
      start:
        line: 7
        col: 13
      end:
        line: 7
        col: 29
    value: ""
  headers:
    token:
      text: "x.value.children"
      start:
        line: 7
        col: 13
      end:
        line: 7
        col: 29
    acceptDefs: []
    returnDefs: []
  src: "x.value.children"
  value:
    token:
      text: "x.value.children"
      start:
        line: 7
        col: 13
      end:
        line: 7
        col: 29
    path:
      token:
        text: "x.value"
        start:
          line: 7
          col: 13
        end:
          line: 7
          col: 20
      path:
        token:
          text: "x"
          start:
            line: 7
            col: 13
          end:
            line: 7
            col: 14
        value: "x"
      value:
        token:
          text: "value"
          start:
            line: 7
            col: 15
          end:
            line: 7
            col: 20
        value: "value"
    value:
      token:
        text: "children"
        start:
          line: 7
          col: 21
        end:
          line: 7
          col: 29
      value: "children"
- token:
    text: "x.value.children.value"
    start:
      line: 8
      col: 13
    end:
      line: 8
      col: 35
  id:
    token:
      text: "x.value.children.value"
      start:
        line: 8
        col: 13
      end:
        line: 8
        col: 35
    value: ""
  headers:
    token:
      text: "x.value.children.value"
      start:
        line: 8
        col: 13
      end:
        line: 8
        col: 35
    acceptDefs: []
    returnDefs: []
  src: "x.value.children.value"
  value:
    token:
      text: "x.value.children.value"
      start:
        line: 8
        col: 13
      end:
        line: 8
        col: 35
    path:
      token:
        text: "x.value.children"
        start:
          line: 8
          col: 13
        end:
          line: 8
          col: 29
      path:
        token:
          text: "x.value"
          start:
            line: 8
            col: 13
          end:
            line: 8
            col: 20
        path:
          token:
            text: "x"
            start:
              line: 8
              col: 13
            end:
              line: 8
              col: 14
          value: "x"
        value:
          token:
            text: "value"
            start:
              line: 8
              col: 15
            end:
              line: 8
              col: 20
          value: "value"
      value:
        token:
          text: "children"
          start:
            line: 8
            col: 21
          end:
            line: 8
            col: 29
        value: "children"
    value:
      token:
        text: "value"
        start:
          line: 8
          col: 30
        end:
          line: 8
          col: 35
      value: "value"
- token:
    text: "5=10and20=30"
    start:
      line: 9
      col: 13
    end:
      line: 9
      col: 31
  id:
    token:
      text: "5=10and20=30"
      start:
        line: 9
        col: 13
      end:
        line: 9
        col: 31
    value: ""
  headers:
    token:
      text: "5=10and20=30"
      start:
        line: 9
        col: 13
      end:
        line: 9
        col: 31
    acceptDefs: []
    returnDefs: []
  src: "5 = 10 and 20 = 30"
  value:
    token:
      text: "5=10and20=30"
      start:
        line: 9
        col: 13
      end:
        line: 9
        col: 31
    left:
      token:
        text: "5=10"
        start:
          line: 9
          col: 13
        end:
          line: 9
          col: 19
      type: "EQUAL"
      left:
        token:
          text: "5"
          start:
            line: 9
            col: 13
          end:
            line: 9
            col: 14
        type: "INTEGER"
        value: "5"
      right:
        token:
          text: "10"
          start:
            line: 9
            col: 17
          end:
            line: 9
            col: 19
        type: "INTEGER"
        value: "10"
    right:
      token:
        text: "20=30"
        start:
          line: 9
          col: 24
        end:
          line: 9
          col: 31
      type: "EQUAL"
      left:
        token:
          text: "20"
          start:
            line: 9
            col: 24
          end:
            line: 9
            col: 26
        type: "INTEGER"
        value: "20"
      right:
        token:
          text: "30"
          start:
            line: 9
            col: 29
          end:
            line: 9
            col: 31
        type: "INTEGER"
        value: "30"
- token:
    text: "x=10ory=30"
    start:
      line: 10
      col: 13
    end:
      line: 10
      col: 29
  id:
    token:
      text: "x=10ory=30"
      start:
        line: 10
        col: 13
      end:
        line: 10
        col: 29
    value: ""
  headers:
    token:
      text: "x=10ory=30"
      start:
        line: 10
        col: 13
      end:
        line: 10
        col: 29
    acceptDefs: []
    returnDefs: []
  src: "x = 10 or y = 30"
  value:
    token:
      text: "x=10ory=30"
      start:
        line: 10
        col: 13
      end:
        line: 10
        col: 29
    left:
      token:
        text: "x=10"
        start:
          line: 10
          col: 13
        end:
          line: 10
          col: 19
      type: "EQUAL"
      left:
        token:
          text: "x"
          start:
            line: 10
            col: 13
          end:
            line: 10
            col: 14
        value: "x"
      right:
        token:
          text: "10"
          start:
            line: 10
            col: 17
          end:
            line: 10
            col: 19
        type: "INTEGER"
        value: "10"
    right:
      token:
        text: "y=30"
        start:
          line: 10
          col: 23
        end:
          line: 10
          col: 29
      type: "EQUAL"
      left:
        token:
          text: "y"
          start:
            line: 10
            col: 23
          end:
            line: 10
            col: 24
        value: "y"
      right:
        token:
          text: "30"
          start:
            line: 10
            col: 27
          end:
            line: 10
            col: 29
        type: "INTEGER"
        value: "30"
- token:
    text: "x=10orsum(y,x,z)=-30"
    start:
      line: 11
      col: 13
    end:
      line: 11
      col: 41
  id:
    token:
      text: "x=10orsum(y,x,z)=-30"
      start:
        line: 11
        col: 13
      end:
        line: 11
        col: 41
    value: ""
  headers:
    token:
      text: "x=10orsum(y,x,z)=-30"
      start:
        line: 11
        col: 13
      end:
        line: 11
        col: 41
    acceptDefs: []
    returnDefs: []
  src: "x = 10 or sum(y, x, z) = -30"
  value:
    token:
      text: "x=10orsum(y,x,z)=-30"
      start:
        line: 11
        col: 13
      end:
        line: 11
        col: 41
    left:
      token:
        text: "x=10"
        start:
          line: 11
          col: 13
        end:
          line: 11
          col: 19
      type: "EQUAL"
      left:
        token:
          text: "x"
          start:
            line: 11
            col: 13
          end:
            line: 11
            col: 14
        value: "x"
      right:
        token:
          text: "10"
          start:
            line: 11
            col: 17
          end:
            line: 11
            col: 19
        type: "INTEGER"
        value: "10"
    right:
      token:
        text: "sum(y,x,z)=-30"
        start:
          line: 11
          col: 23
        end:
          line: 11
          col: 41
      type: "EQUAL"
      left:
        token:
          text: "sum(y,x,z)"
          start:
            line: 11
            col: 23
          end:
            line: 11
            col: 35
        type: "SUM"
        values:
        - token:
            text: "y"
            start:
              line: 11
              col: 27
            end:
              line: 11
              col: 28
          value: "y"
        - token:
            text: "x"
            start:
              line: 11
              col: 30
            end:
              line: 11
              col: 31
          value: "x"
        - token:
            text: "z"
            start:
              line: 11
              col: 33
            end:
              line: 11
              col: 34
          value: "z"
      right:
        token:
          text: "-30"
          start:
            line: 11
            col: 38
          end:
            line: 11
            col: 41
        value:
          token:
            text: "30"
            start:
              line: 11
              col: 39
            end:
              line: 11
              col: 41
          type: "INTEGER"
          value: "30"
- token:
    text: "true=false?10:sum(20)"
    start:
      line: 12
      col: 13
    end:
      line: 12
      col: 40
  id:
    token:
      text: "true=false?10:sum(20)"
      start:
        line: 12
        col: 13
      end:
        line: 12
        col: 40
    value: ""
  headers:
    token:
      text: "true=false?10:sum(20)"
      start:
        line: 12
        col: 13
      end:
        line: 12
        col: 40
    acceptDefs: []
    returnDefs: []
  src: "true = false ? 10 : sum(20)"
  value:
    token:
      text: "true=false?10:sum(20)"
      start:
        line: 12
        col: 13
      end:
        line: 12
        col: 40
    operation:
      token:
        text: "true=false"
        start:
          line: 12
          col: 13
        end:
          line: 12
          col: 25
      type: "EQUAL"
      left:
        token:
          text: "true"
          start:
            line: 12
            col: 13
          end:
            line: 12
            col: 17
        type: "BOOLEAN"
        value: "true"
      right:
        token:
          text: "false"
          start:
            line: 12
            col: 20
          end:
            line: 12
            col: 25
        type: "BOOLEAN"
        value: "false"
    left:
      token:
        text: "10"
        start:
          line: 12
          col: 28
        end:
          line: 12
          col: 30
      type: "INTEGER"
      value: "10"
    right:
      token:
        text: "sum(20)"
        start:
          line: 12
          col: 33
        end:
          line: 12
          col: 40
      type: "SUM"
      values:
      - token:
          text: "20"
          start:
            line: 12
            col: 37
          end:
            line: 12
            col: 39
        type: "INTEGER"
        value: "20"
- token:
    text: "-x"
    start:
      line: 13
      col: 13
    end:
      line: 13
      col: 15
  id:
    token:
      text: "-x"
      start:
        line: 13
        col: 13
      end:
        line: 13
        col: 15
    value: ""
  headers:
    token:
      text: "-x"
      start:
        line: 13
        col: 13
      end:
        line: 13
        col: 15
    acceptDefs: []
    returnDefs: []
  src: "-x"
  value:
    token:
      text: "-x"
      start:
        line: 13
        col: 13
      end:
        line: 13
        col: 15
    value:
      token:
        text: "x"
        start:
          line: 13
          col: 14
        end:
          line: 13
          col: 15
      value: "x"
- token:
    text: "+x+(1-20)"
    start:
      line: 14
      col: 13
    end:
      line: 14
      col: 24
  id:
    token:
      text: "+x+(1-20)"
      start:
        line: 14
        col: 13
      end:
        line: 14
        col: 24
    value: ""
  headers:
    token:
      text: "+x+(1-20)"
      start:
        line: 14
        col: 13
      end:
        line: 14
        col: 24
    acceptDefs: []
    returnDefs: []
  src: "+x + (1-20)"
  value:
    token:
      text: "+x+(1-20)"
      start:
        line: 14
        col: 13
      end:
        line: 14
        col: 24
    type: "ADD"
    left:
      token:
        text: "+x"
        start:
          line: 14
          col: 13
        end:
          line: 14
          col: 15
      value:
        token:
          text: "x"
          start:
            line: 14
            col: 14
          end:
            line: 14
            col: 15
        value: "x"
    right:
      token:
        text: "1-20"
        start:
          line: 14
          col: 19
        end:
          line: 14
          col: 23
      type: "SUBSTRACT"
      left:
        token:
          text: "1"
          start:
            line: 14
            col: 19
          end:
            line: 14
            col: 20
        type: "INTEGER"
        value: "1"
      right:
        token:
          text: "20"
          start:
            line: 14
            col: 21
          end:
            line: 14
            col: 23
        type: "INTEGER"
        value: "20"
- token:
    text: "(x*y/20)+1"
    start:
      line: 15
      col: 13
    end:
      line: 15
      col: 25
  id:
    token:
      text: "(x*y/20)+1"
      start:
        line: 15
        col: 13
      end:
        line: 15
        col: 25
    value: ""
  headers:
    token:
      text: "(x*y/20)+1"
      start:
        line: 15
        col: 13
      end:
        line: 15
        col: 25
    acceptDefs: []
    returnDefs: []
  src: "(x*y/20) + 1"
  value:
    token:
      text: "(x*y/20)+1"
      start:
        line: 15
        col: 13
      end:
        line: 15
        col: 25
    type: "ADD"
    left:
      token:
        text: "x*y/20"
        start:
          line: 15
          col: 14
        end:
          line: 15
          col: 20
      type: "DIVIDE"
      left:
        token:
          text: "x*y"
          start:
            line: 15
            col: 14
          end:
            line: 15
            col: 17
        type: "MULTIPLY"
        left:
          token:
            text: "x"
            start:
              line: 15
              col: 14
            end:
              line: 15
              col: 15
          value: "x"
        right:
          token:
            text: "y"
            start:
              line: 15
              col: 16
            end:
              line: 15
              col: 17
          value: "y"
      right:
        token:
          text: "20"
          start:
            line: 15
            col: 18
          end:
            line: 15
            col: 20
        type: "INTEGER"
        value: "20"
    right:
      token:
        text: "1"
        start:
          line: 15
          col: 24
        end:
          line: 15
          col: 25
      type: "INTEGER"
      value: "1"
